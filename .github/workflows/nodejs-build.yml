# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js Build CI

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

jobs:
    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [18.x, 20.x, 22.x]
        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"
            - run: chmod +x ./scripts/*
            - run: npm ci
            - name: Run manual build
              run: rm -rf dist
            - run: cp node_modules/baileys/lib/Socket/index.d.ts dist/lib.Socket.baileys.d.ts
            - run: sed -i 's/import("long").Long/import("long")/g' node_modules/baileys/lib/Socket/index.d.ts
            - name: Compile
              run: npm exec tsc-multi

            - run: sed -i 's/import { \(.*\) } from "baileys";/import baileys from "baileys";\nconst { \1 } = baileys;/g' dist/esm/baileys/index.mjs
            - run: sed -i 's/import { \(.*\) } from "file-type";/import fileTypePkg from "file-type";\nconst { \1 } = fileTypePkg;/g' dist/esm/baileys/lib/socket-utils.mjs
            - run: sed -i 's/import { proto } from "baileys";/import protoPkg from "baileys";\nconst { proto } = protoPkg;/g' dist/esm/baileys/lib/store/make-in-memory-store.mjs

            - name: Run node require tests
              run: (cd dist/cjs && node -e 'require("@frierendv/frieren")')
            - name: Run node import tests
              run: (cd dist/cjs && node -e 'require("@frierendv/frieren")' --input-type=module)
